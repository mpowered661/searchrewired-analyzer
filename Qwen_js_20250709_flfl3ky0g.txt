const express = require('express');
const axios = require('axios');
const cheerio = require('cheerio');
const { flesch } = require('flesch');
const isHttps = require('is-https');
const detectSchema = require('schema-detection');

const app = express();
const PORT = process.env.PORT || 3000;

// Simple CORS middleware
app.use((req, res, next) => {
  res.header("Access-Control-Allow-Origin", "*");
  res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
  next();
});

// Health check route
app.get('/', (req, res) => {
  res.send('SearchRewired Analyzer API is running!');
});

// Analysis endpoint
app.get('/analyze', async (req, res) => {
  const url = req.query.url;

  if (!url) {
    return res.status(400).json({ error: 'Missing URL parameter' });
  }

  try {
    // Fetch HTML
    const response = await axios.get(url);
    const html = response.data;
    const $ = cheerio.load(html);

    // SSL Check
    const ssl = isHttps(url);

    // Schema detection
    const schemaTypes = detectSchema(html);

    // Readability
    const bodyText = $('body').text();
    const readabilityScore = flesch(bodyText);

    let readabilityLabel = 'Hard';
    if (readabilityScore > 60) readabilityLabel = 'Easy';
    else if (readabilityScore > 30) readabilityLabel = 'Medium';

    // Mobile friendly (basic check)
    const mobileFriendly = $('meta[name="viewport"]').length > 0;

    // AI Score Calculation (simple weighted average)
    let aiScore = 50;
    if (ssl) aiScore += 10;
    if (schemaTypes.length > 0) aiScore += 20;
    if (mobileFriendly) aiScore += 10;
    if (readabilityScore > 30) aiScore += 10;

    // Optimization Tips
    const tips = [];
    if (!ssl) tips.push("Add an SSL certificate (HTTPS) to improve trust.");
    if (schemaTypes.length === 0) tips.push("Add structured data (schema.org) like FAQPage or Article.");
    if (!mobileFriendly) tips.push("Add a viewport meta tag for mobile responsiveness.");
    if (readabilityScore < 30) tips.push("Improve readability by shortening sentences and using simpler words.");

    // Build result
    const result = {
      url,
      ai_score: Math.min(aiScore, 100),
      schema_detected: schemaTypes,
      readability: readabilityLabel,
      ssl,
      mobile_friendly: mobileFriendly,
      tips
    };

    res.json(result);

  } catch (error) {
    console.error(`Error fetching ${url}:`, error.message);
    res.status(500).json({ error: `Failed to analyze ${url}` });
  }
});

app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});